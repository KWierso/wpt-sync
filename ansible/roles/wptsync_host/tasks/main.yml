---
# assuming _image_name, _ssh_hgmo, _ssh_github, _credentials variables are
# defined in call to ansible-playbook
- name: ensure wpt_user is in docker group
  user:
    name: "{{ wpt_user | mandatory }}"
    groups: docker
    append: yes

- name: ensure git is installed
  yum:
    name: git
    state: latest

- name: checkout latest master in wpt-sync repo
  git:
    repo: "{{ wptsync_repo_url | mandatory }}"
    dest: "{{ wptsync_repo_path | mandatory }}"
    version: origin/master
    depth: 1
    accept_hostkey: yes
    force: yes
  become_user: wpt_user

- name: ensure directories expected by docker container
  file:
    path: "{{ item }}"
    state: directory
    owner: wpt_user
    group: wpt
    mode: 0775
  with_items:
    - "{{ mount_repos | mandatory }}"
    - "{{ mount_workspace| mandatory }}"
    - "{{ mount_data | mandatory }}"
    - "{{ mount_data | mandatory }}/{{ ssh_dir | mandatory }}"

- name: install credentials
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: wpt_user
    mode: 0600
  with_items:
    - { src: "{{ _ssh_hgmo }}", dest: "{{ mount_data }}/{{ ssh_dir }}/id_hgmo" }
    - { src: "{{ _ssh_hgmo }}.pub", dest: "{{ mount_data }}/{{ ssh_dir }}/id_hgmo.pub" }
    - { src: "{{ _ssh_github }}", dest: "{{ mount_data }}/{{ ssh_dir }}/id_github" }
    - { src: "{{ _ssh_github }}.pub", dest: "{{ mount_data }}/{{ ssh_dir }}/id_github.pub" }
    - { src: "{{ _credentials }}", dest: "{{ mount_data }}/credentials_prod.ini" }

- name: install docker-run helper script
  template:
    src: "{{ item }}.j2"
    dest: "{{ internal_volume | mandatory }}/{{ item }}"
    mode: 0755
  with_items:
    - run_docker.sh
  become_user: wpt_user

- name: chown mount directories to docker container's UID
  command: "/usr/bin/chown -R {{ docker_uid }} {{ item }}"
  with_items:
    - "{{ mount_repos | mandatory }}"
    - "{{ mount_workspace| mandatory }}"
    - "{{ mount_data | mandatory }}"

- name: install docker image
  copy:
    src: "{{ _tempdir | mandatory }}/{{ _image_name }}.tar.bz2"
    dest: "{{ internal_volume }}/{{ _image_name }}.tar.bz2"
    owner: wpt_user
    group: wpt
    mode: 0644

- name: remove old docker image archive
  file:
    path: "{{ internal_volume }}/{{ _image_name }}.tar"
    state: absent

- name: decompress docker image
  command: "/usr/bin/bunzip2 {{internal_volume}}/{{ _image_name }}.tar.bz2"
  args:
    chdir: "{{ internal_volume }}"
  become_user: wpt_user

- name: load docker image from archive
  command: "/usr/bin/docker load -i {{internal_volume}}/{{ _image_name }}.tar"
  become_user: wpt_user
